# -*- coding: utf-8 -*-
"""MIS-515_Homework2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DInyPcI_VUj_yApaYFAnMbiePfAa0hZV
"""

#Global Output File Data List
output_data = []

#Base URL
base_url = "https://api.opencagedata.com/geocode/v1/xml?q="

def write_file(output_data):
    #Output Data of each earthquake to CSV File
        with open("earthquakes.csv","w") as file:
            writer = csv.writer(file,lineterminator = "\n")

            #Header Data
            writer.writerow(["Time","Magnitude","Latitude","Longitude","County","State"])

            #Write Data into file
            for line in output_data:
                writer.writerow(line)

def convert_time(orig_time):

        # Convert milliseconds to seconds
        orig_time_sec = orig_time / 1000
        # Convert Unix epoch time to datetime object
        import datetime
        datetime_timestamp = datetime.datetime.utcfromtimestamp(orig_time_sec)
        # Subtract 7 hours to adjust for time zone difference
        datetime_adj_timestamp = datetime_timestamp - datetime.timedelta(hours = 7)
        # Convert to human-interpretable string
        time_str = datetime_adj_timestamp.strftime("%B %d, %Y at %I:%M:%S %p")

        return time_str

def open_cage_response (magnitude,time,latitude,longitude,api_key):

    #Add Lat and Lon to Base URL to fetch geographic location
    full_url = base_url + str(latitude) + "+" + str(longitude) + "&key=" + api_key

    response = requests.get(full_url)
    if response:
        data = xmltodict.parse(response.text)

        try:
            #Get the County and State    
            county = data["response"]["results"]["result"]["components"]["county"]
            state = data["response"]["results"]["result"]["components"]["state"]
            
            #Print the earthquake details
            print("Magnitude",magnitude ,"earthquake on",time,"and located at (",latitude,",",longitude,") in",county,",",state,".")

            #Append the record to output list
            output_data.append([time,magnitude,latitude,longitude,county,state])
        except:
            #Print the earthquake details if County and State couldn't be fetched
            #The earthquake took place in Ocean
            print("Magnitude",magnitude ,"earthquake on",time,"and located at (",latitude,",",longitude,") in the Ocean.")

            #Append the record to output list
            output_data.append([time,magnitude,latitude,longitude,"N/A","N/A"])

        return output_data  
                
    else:
        print("Couldn't retrieve geographic data for earthquake location")

!pip install xmltodict

import csv, json, requests, xmltodict

earthquake_data = []
coordinates = []

response = requests.get("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson")

if response:
    #Get the API Key from user
    api_key = input("Enter the API Key:")

    data = json.loads(response.text)
    #print(json.dumps(data,indent = 4))

    n = len(data["features"])
    for index in range(0,n,1):

        #Magnitude
        magnitude = data["features"][index]["properties"]["mag"]

        #Earthquake Time
        orig_time = data["features"][index]["properties"]["time"]
        time = convert_time(orig_time)

        #Latitude
        latitude = data["features"][index]["geometry"]["coordinates"][1]

        #Longitude
        longitude = data["features"][index]["geometry"]["coordinates"][0]

        #Call the Open Cage Response to fetch the geographic data
        output_data = open_cage_response(magnitude,convert_time(orig_time),latitude,longitude,api_key)

    #Write the records in CSV File
    write_file(output_data)
    
else:
    print("Sorry! Connection error.")